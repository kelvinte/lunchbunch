openapi: 3.0.0
info:
  title: Lunchbunch - Decide your lunch
  version: 1.0.0
servers:
  - url: localhost:8080
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Auth
  - name: Lunch Request
paths:
  /register:
    post:
      tags:
        - Auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sample@gmail.com
                password: hello123
                name: sample
      responses:
        '200':
          description: Successful response
          content:
            application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Request Processed successfully
                status:
                  type: integer
                  example: 200
                success:
                  type: boolean
                  example: true
  /login:
    get:
      tags:
        - Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: sample@gmail.com
                password: hello123
      responses:
        '200':
          description: Successful response
          content:
            application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Request Processed successfully
                status:
                  type: integer
                  example: 200
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  description: User data
                  properties:
                    accessToken:
                      type: string
                      description: Access token
                    expiresAt:
                      type: integer
                      description: Access token expiration time (epoch milliseconds)
                    email:
                      type: string
                      description: User email
                    id:
                      type: integer
                      description: User ID
                    role:
                      type: string
                      description: User role
  /lunch-plan/{uuid}:
    get:
      tags:
        - Lunch Request
      summary: Get Lunch Plan Detailed
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /lunch-plan:
    post:
      tags:
        - Lunch Request
      summary: Create Lunch Plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: '2024-10-03'
                description: birthday event
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Request Processed successfully
                status:
                  type: integer
                  example: 200
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  description: User data
                  properties:
                    id:
                      type: string
                      description: Id of lunch plan
                    uuid:
                      type: string
                      description: uuid of lunch plan event
                    date:
                      type: string
                      description: date of event
                    description:
                      type: string
                      description: description of event
